// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(CleanContext))]
    [Migration("20180912191538_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview1-35029");

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new { Id = 1, Name = "Martin Fowler" },
                        new { Id = 2, Name = "Uncle Bob" },
                        new { Id = 3, Name = "Kent Beck" }
                    );
                });

            modelBuilder.Entity("Domain.Employees.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new { Id = 1, Name = "Eric Evans" },
                        new { Id = 2, Name = "Greg Young" },
                        new { Id = 3, Name = "John Bara" }
                    );
                });

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1, Name = "Spaghetti", UnitPrice = 5m },
                        new { Id = 2, Name = "Lasagna", UnitPrice = 10m },
                        new { Id = 3, Name = "Ravioli", UnitPrice = 15m }
                    );
                });

            modelBuilder.Entity("Domain.Sales.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EmployeeId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");

                    b.HasData(
                        new { Id = 1, CustomerId = 1, Date = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Local), EmployeeId = 1, ProductId = 1, Quantity = 1, TotalPrice = 5m, UnitPrice = 5m },
                        new { Id = 2, CustomerId = 2, Date = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Local), EmployeeId = 2, ProductId = 2, Quantity = 2, TotalPrice = 20m, UnitPrice = 10m },
                        new { Id = 3, CustomerId = 3, Date = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Local), EmployeeId = 3, ProductId = 3, Quantity = 3, TotalPrice = 45m, UnitPrice = 15m }
                    );
                });

            modelBuilder.Entity("Domain.Sales.Sale", b =>
                {
                    b.HasOne("Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Domain.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Domain.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
